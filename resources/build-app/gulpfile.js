'use strict';

/***********************************************************************************************************************
 * Path and file naming settings
 **********************************************************************************************************************/
require('events').EventEmitter.prototype._maxListeners = 400;


var src_dir = './src/assets/';
var styles_dir = './src/styles/';

var path = {
    build: {
        fonts: src_dir + 'fonts/'
    },
    src: {
        fonts: styles_dir + '/fonts/*.ttf'
    },
    watch: {
        fonts: styles_dir + '/fonts/**/*.*'
    },
};


/***********************************************************************************************************************
 * Plugins
 **********************************************************************************************************************/

var gulp = require('gulp');

var plugins = {
    'watch': require('gulp-watch'),
    'ttf2woff': require('gulp-ttf2woff'),
    'ttf2eot': require('gulp-ttf2eot')
};


/***********************************************************************************************************************
 * Task: Fonts
 ***********************************************************************************************************************
 *
 * Generate .eot and .woff files frome one .ttf file.
 * Reacts on .ttf only
 *
 **********************************************************************************************************************/

gulp.task('fonts', function() {
    gulp.src(path.src.fonts)
        .pipe(gulp.dest(path.build.fonts))
        .pipe(plugins.ttf2eot())
        .pipe(gulp.dest(path.build.fonts));
    gulp.src(path.src.fonts)
        .pipe(plugins.ttf2woff())
        .pipe(gulp.dest(path.build.fonts));
});


/***********************************************************************************************************************
 * Task: Watch
 ***********************************************************************************************************************
 *
 * Watch all files and start needed tasks when changes happen
 *
 **********************************************************************************************************************/

gulp.task('watch', function() {
    plugins.watch([path.watch.fonts], function(event, cb) {
        gulp.start('fonts');
    });
});

/***********************************************************************************************************************
 * Task: Dev
 ***********************************************************************************************************************
 *
 * Run all task in development mode. Quick use for developing process
 *
 **********************************************************************************************************************/

gulp.task('dev', [
    'fonts',
]);

gulp.task('default', ['dev']);
